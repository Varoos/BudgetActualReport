@using System.Globalization
@model BudgetActualReport.Models.AgeingAnalysis
@{
    ViewBag.Title = "AgeingReport";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
    var NoOfSelectedMonths = ViewBag.NoOfSelectedMonths;
    var nosmCount = ViewBag.NoOfSelectedMonthsCount;
    var NoOfMonths = ViewBag.DynamicMonths;
    var NoOfMonthYrs = ViewBag.DynamicMonthYrs;
}


@using (Html.BeginForm("ExcelGenerate", "Ageing", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    <style>
        #progress {
            text-align: center;
            width: 100%;
            height: 100%;
            position: fixed;
            opacity: 0.5;
            z-index: 1500;
            background: url("https://www.creditmutuel.fr/cmne/fr/banques/webservices/nswr/images/loading.gif") no-repeat center center rgba(0,0,0,0.26);
            /*background:url("../../Content/Processing.gif") no-repeat center center rgba(0,0,0,0.25);*/
        }
        .subtotal{
            /*background-color:#0073AA !important;*/
            color:black;
        }

        #BaseCurrency {
            text-align: right;
        }

        .label {
            color: #34c4f9;
        }

        h2 {
            border-bottom: 3px solid #cc9900;
            font: 2.75em/1.75em Georgia, serif;
            color: #996600;
            text-align: center;
        }

        tr.highlighted td {
            background: brown;
        }

        .center {
            text-align: center;
        }

        #Totaltr {
            background-color: #99ccff;
        }

        body {
            padding: 0px 20px !important;
        }

        .table .thead-dark th {
            color: #fff;
            background-color: #286090;
            /*border-color: #32383e;*/
        }

        /* This is what we are focused on */
        .table-wrap {
            overflow-y: scroll;
            height: 500px;
            font-size: 0.8em;
        }

            .table-wrap th {
                position: sticky;
                top: 0;
            }

            .table-wrap thead {
                position: sticky;
                top: 0;
            }

        /* A bit more styling to make it look better */
        .table-wrap {
            /*background: CadetBlue;*/
        }

        table {
            border-collapse: collapse;
            width: 100%;
        }

        th {
            background: #DDD;
        }

        td, th {
            padding: 0.3rem !important;
            text-align: left;
        }

        .nav-tabs > li.active > a, .nav-tabs > li.active > a:hover, .nav-tabs > li.active > a:focus {
            background-color: #c7dff1 !important;
        }
    </style>

    <div id="progress" class="modal">
        <div class="center">
            <img src="~/Content/loader4.gif" />
        </div>
    </div>
    <input type="hidden" id="cid" name="cid" />
    <input type="hidden" id="sid" name="sid" />
    <input type="hidden" id="uid" name="uid" />

    <h2 style="color: #34c4f9 ;text-align:center;"> AGEING REPORT </h2>
    <div class="row form-group" style="margin-top:1%">
        <div class="col-lg-4 col-md-4 col-sm-4" style="text-align:center;">
        </div>
        <div class="col-lg-4 col-md-4 col-sm-4" style="text-align:center;">

        </div>
        <div class="col-lg-4 col-md-4 col-sm-4" style="text-align:center;">
            @if (Convert.ToBoolean(TempData["showprint"]))
            {
                <button type="submit" id="btnExcel" class="btn btn-primary btn-sm">Export to Excel</button>
                @Html.ActionLink("Back", "Index", "Ageing", new { @CompanyId = TempData["CompanyId"] }, new { @class = "btn btn-primary btn-sm" })
            }
        </div>
    </div>

    <div class="row form-group">
        <div class="col-lg-12 col-md-12 col-sm-12">
            <div class="table-wrap">
                <table class="table table-bordered table-striped" border="1" id="tagtable">
                    <thead class="thead-dark">
                        <tr id="tableHead">
                            <th style="text-align:center;">PARTICULARS</th>
                            <th style="text-align:center;">SALESMAN</th>
                            <th style="text-align:center;">LPONO</th>
                            <th style="text-align:center;">INVOICE AMOUNT</th>
                            <th style="text-align:center;">BALANCE AMOUNT</th>
                            <th style="text-align:center;">DATE</th>
                            <th style="text-align:center;">DELAY DAYS</th>
                            @if (nosmCount > 0)
                            {
                                foreach (string _nom in NoOfMonths)
                                {
                                    foreach (var sm in NoOfSelectedMonths)
                                    {
                                        if (_nom.ToLower() == sm)
                                        {
                                            <th style="text-align:center;" class="@_nom.ToLower()">@_nom</th>
                                        }
                                    }
                                }
                            }
                            else
                            {
                                foreach (string _nom in NoOfMonths)
                                {
                                    <th style="text-align:center;" class="@_nom.ToLower()">@_nom</th>
                                }
                            }
                            @if (nosmCount > 11)
                            { 
                        <th style="text-align:center;">More Than One Year</th>
                            }
                                
                                <th style="text-align:center;">Total</th>
                            </tr>
                    </thead>
                    <tbody id="golden">
                        @{
                            try
                            {
                                var CustomersGroup = Model.Ageing.GroupBy(_ => _.AccountName);

                                decimal GrandInvoiceAmtTotal = 0;
                                decimal GrandBalanceAmtTotal = 0;
                                decimal GrandTotalZeroSum = 0;
                                decimal GrandTotalRowSum = 0;

                                foreach (var _customer in CustomersGroup)
                                {
                                    var TotalRowSum = "";
                                    decimal TotalZeroSum = 0;
                                    decimal FinalTotalRowSum = 0;
                                    decimal InvoiceAmtTotal = _customer.Sum(_ => _.InvoiceAmt);
                                    decimal BalanceAmtTotal = _customer.Sum(_ => _.BalanceAmt);

                                    GrandInvoiceAmtTotal = Convert.ToDecimal(GrandInvoiceAmtTotal) + InvoiceAmtTotal;
                                    GrandBalanceAmtTotal = Convert.ToDecimal(GrandBalanceAmtTotal) + BalanceAmtTotal;

                                    
                                    

                                    <tr class="skip">
                                        <td colspan="8" style="text-align:left;"><b> @_customer.Key  </b></td>
                                    </tr>
                                    foreach (var _cust in _customer)
                                    {
                                        var count = 0;
                    <tr align="center">
                        <td style="text-align:center;">@_cust.VoucherName</td>
                        <td style="text-align:center;">@_cust.SalesMan</td>
                        <td style="text-align:center;">@_cust.LPONo</td>
                        <td style="text-align:center;"><b>@_cust.InvoiceAmt.ToString("#,##0.00")</b></td>
                        <td style="text-align:center;"><b>@_cust.BalanceAmt.ToString("#,##0.00")</b></td>
                        <td style="text-align:center;">@_cust.Date</td>
                        <td style="text-align:center;">@_cust.DelayDays</td>
                        @if (nosmCount > 0)
                        {
                            TotalRowSum = _cust.BalanceAmt.ToString("#,##0.00");
                            FinalTotalRowSum = Convert.ToDecimal(FinalTotalRowSum) + Convert.ToDecimal(_cust.BalanceAmt.ToString("#,##0.00"));
                            GrandTotalRowSum = Convert.ToDecimal(GrandTotalRowSum) + FinalTotalRowSum;
                            foreach (string _nom in NoOfMonthYrs)
                            {
                                foreach (var sm in NoOfSelectedMonths)
                                {
                                    if (sm == _nom.ToLower().Remove(_nom.Length - 6))
                                    {

                                        if (_cust.Month == _nom)
                                        {
                                            <td style="text-align:center;" class="@_nom.ToLower().Remove(_nom.Length-6)"><b>@_cust.BalanceAmt.ToString("#,##0.00")</b></td>
                                            count = 1;
                                        }
                                        else
                                        {
                                            <td style="text-align:center;" class="@_nom.ToLower().Remove(_nom.Length-6)"></td>
                                        }
                                    }
                                }
                            }
                        }
                        else
                        {
                            foreach (string _nom in NoOfMonthYrs)
                            {
                                if (_cust.Month == _nom)
                                {
                                    <td style="text-align:center;" class="@_nom.ToLower().Remove(_nom.Length-6)"><b>@_cust.BalanceAmt.ToString("#,##0.00")</b></td>
                                    count = 1;
                                }
                                else
                                {
                                    <td style="text-align:center;" class="@_nom.ToLower().Remove(_nom.Length-6)"></td>
                                }
                            }
                        }


                        @if (nosmCount > 11)
                        {
                            if (count == 0)
                            {
                                TotalZeroSum = Convert.ToDecimal(TotalZeroSum) + Convert.ToDecimal(_cust.BalanceAmt.ToString("#,##0.00"));
                                <td style="text-align:center;"><b>@_cust.BalanceAmt.ToString("#,##0.00")</b></td>
                            }
                            else
                            {
                                <td style="text-align:center;"></td>
                            }
                        }
                        
                        <td style="text-align:center;"><b>@TotalRowSum</b></td>
                    </tr>
                                    }

                    <tr align="center" class="subtotal">
                        <td style="text-align:center;"><b>Sub Total</b></td>
                        <td style="text-align:center;"></td>
                        <td style="text-align:center;"></td>
                        <td style="text-align:center;"><b>@InvoiceAmtTotal.ToString("#,##0.00")</b></td>
                        <td style="text-align:center;"><b>@BalanceAmtTotal.ToString("#,##0.00")</b></td>
                        <td style="text-align:center;"></td>
                        <td style="text-align:center;"></td>
                        @if (nosmCount > 0)
                        {
                            foreach (string _nom in NoOfMonthYrs)
                            {
                                foreach (var sm in NoOfSelectedMonths)
                                {
                                    if (sm == _nom.ToLower().Remove(_nom.Length - 6))
                                    {
                                        var CustMonthWise = _customer.Where(_ => _.Month.ToLower().Remove(_nom.Length - 6).Contains(_nom.ToLower().Remove(_nom.Length - 6))).Sum(_ => _.BalanceAmt);
                                        if (Math.Abs(CustMonthWise) > 0)
                                        {
                                            <td style="text-align:center;"><b>@CustMonthWise.ToString("#,##0.00")</b></td>
                                        }
                                        else
                                        {
                                            <td style="text-align:center;">0.00</td>
                                        }
                                    }
                                }
                            }
                        }
                        else
                        {
                            foreach (string _nom in NoOfMonthYrs)
                            {
                                var CustMonthWise = _customer.Where(_ => _.Month == _nom).Sum(_ => _.BalanceAmt);
                                <td style="text-align:center;"><b>@CustMonthWise.ToString("#,##0.00")</b></td>
                            }
                        }
                        @if (nosmCount > 11)
                        {
                            <td style="text-align:center;"><b>@TotalZeroSum.ToString("#,##0.00")</b></td>
                            GrandTotalZeroSum = Convert.ToDecimal(GrandTotalZeroSum) + TotalZeroSum;
                        }
                        
                        <td style="text-align:center;"><b>@FinalTotalRowSum</b></td>
                    </tr>
                                }
                    <tr align="center" class="subtotal">
                        <td style="text-align:center;"><b>Grand Total</b></td>
                        <td style="text-align:center;"></td>
                        <td style="text-align:center;"></td>
                        <td style="text-align:center;"><b>@GrandInvoiceAmtTotal.ToString("#,##0.00")</b></td>
                        <td style="text-align:center;"><b>@GrandBalanceAmtTotal.ToString("#,##0.00")</b></td>
                        <td style="text-align:center;"></td>
                        <td style="text-align:center;"></td>
                        @if (nosmCount > 0)
                        {
                            foreach (string _nom in NoOfMonthYrs)
                            {
                                foreach (var sm in NoOfSelectedMonths)
                                {
                                    if (sm == _nom.ToLower().Remove(_nom.Length - 6))
                                    {
                                        var CustMonthWise = Model.Ageing.Where(_ => _.Month.ToLower().Remove(_nom.Length - 6).Contains(_nom.ToLower().Remove(_nom.Length - 6))).Sum(_ => _.BalanceAmt);

                                        if (Math.Abs(CustMonthWise) > 0)
                                        {
                                            <td style="text-align:center;"><b>@CustMonthWise.ToString("#,##0.00")</b></td>
                                        }
                                        else
                                        {
                                            <td style="text-align:center;">0.00</td>
                                        }

                                    }
                                }
                            }
                        }
                        else
                        {
                            foreach (string _nom in NoOfMonthYrs)
                            {
                                var CustMonthWise = Model.Ageing.Where(_ => _.Month == _nom).Sum(_ => _.BalanceAmt);
                                <td style="text-align:center;"><b>@CustMonthWise.ToString("#,##0.00")</b></td>
                            }
                        }
                        @if (nosmCount > 11)
                        {
                            <td style="text-align:center;"><b>@GrandTotalZeroSum.ToString("#,##0.00")</b></td>
                        }


                        <td style="text-align:center;"><b>@GrandTotalRowSum</b></td>
                    </tr>
                            }
                            catch (Exception ex)
                            {
                                //alert(ex.Message);
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
                            }

@section Scripts {

    <script src="~/Scripts/FClient.js"></script>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script>
        var compId=@TempData["CompanyId"];
        var path ='@System.Web.Configuration.WebConfigurationManager.AppSettings["IpAddress"]';

        $(document).ready(function() {
            debugger
            getSetPropertyForCompanyId();
            $('#cid').val(compId);
            if(@Model.Ageing.Count()==0){
                $("#btnExcel").prop('disabled', true);
            }
        });


        function getSetPropertyForCompanyId() {
            Focus8WAPI.getGlobalValue("fnGetValueCallBack", "*", 2);
        }
        let r =1
        function fnGetValueCallBack2(objWrapperResult) {
            var bla = "";
            var responseData = objWrapperResult.data;
            if (objWrapperResult.requestType == 1) {
                var Comp = responseData.FieldValue;
                debugger
                $('#cid').val(Comp);
            }
        }

        function fnGetValueCallBack(objWrapperResult) {
            try {
                console.log(`fnGetValueCallBack :: ${r} `,objWrapperResult)
                var responseData = objWrapperResult.data;
                debugger
                console.log(responseData.SessionId);
                var responseData = objWrapperResult.data;
                var Comp =responseData.CompanyId;
                var sessionid = responseData.SessionId;
                var userid = responseData.LoginId;
                r++
                $('#cid').val(Comp);
                $('#sid').val(sessionid);
                $('#uid').val(userid);
            }
            catch (err) {
                alert("Exception: {fnGetValueCallBack2} " + err.message);
                Focus8WAPI.continueModule(Focus8WAPI.ENUMS.MODULE_TYPE.TRANSACTION, true);
            }
        }
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}




