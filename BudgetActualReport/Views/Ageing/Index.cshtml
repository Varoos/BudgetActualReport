@model BudgetActualReport.Models.AgeingAnalysis
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}


<style>
    #progress {
        text-align: center;
        z-index: 1000000;
        overflow: auto;
        height: 100%;
    }

    #load {
        width: 100%;
        height: 100%;
        position: fixed;
        z-index: 9999;
        background: url("https://www.creditmutuel.fr/cmne/fr/banques/webservices/nswr/images/loading.gif") no-repeat center center rgba(0,0,0,0.26);
        /*background:url("../../Content/Processing.gif") no-repeat center center rgba(0,0,0,0.25);*/
    }

    thead {
        color: white;
        background-color: #34c4f9 !important;
    }

    .label {
        color: #34c4f9;
    }

    h2 {
        border-bottom: 3px solid #cc9900;
        font: 2.75em/1.75em Georgia, serif;
        color: #996600;
    }
</style>

<div id="progress" class="modal">
    <div class="center">
        <img src="~/Content/loader4.gif" />
    </div>
</div>

<h2 style="color: #34c4f9 "> Ageing Report </h2>


@using (Html.BeginForm("", "", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    <input type="hidden" id="cid" name="cid" />
    <input type="hidden" id="sid" name="sid" />
    <input type="hidden" id="uid" name="uid" />
    <div class="container">
        <br />
        <div class="row">
            <div class="col-md-12">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Selection, new { @class = "col-md-4 control-label" })
                        <div class="col-md-8">
                            <label> @Html.RadioButtonFor(m => m.Selection, "1", new { @Id = "rbGroup", @Class = "SelectionType", Checked = "checked" }) <b>Group</b></label>  &nbsp;&nbsp;&nbsp;&nbsp;
                            <label> @Html.RadioButtonFor(m => m.Selection, "2", new { @Id = "rbChild", @Class = "SelectionType" }) <b>Child</b></label>
                            @Html.ValidationMessageFor(model => model.Selection, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">

                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Accounts, new { @class = "col-md-4 control-label" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.Accounts, new SelectList(ViewBag.Customers, "Value", "Text"), new { @class = "form-control", multiple = "multiple" })
                            @Html.ValidationMessageFor(model => model.Accounts, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.ReportDate, new { @class = "col-md-4 control-label" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ReportDate, new { htmlAttributes = new { @class = "form-control ", required = "", @type = "Date", @placeholder = "dd-mm-yyyy" } })
                            @Html.ValidationMessageFor(model => model.ReportDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.SalesMan, new { @class = "col-md-4 control-label" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.SalesMan, new SelectList(ViewBag.SalesMans, "Value", "Text"), new { @class = "form-control", multiple = "multiple" })
                            @Html.ValidationMessageFor(model => model.SalesMan, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Currency, new { @class = "col-md-4 control-label" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.Currency, new SelectList(ViewBag.Currencies, "Value", "Text"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Months, new { @class = "col-md-4 control-label" })
                        <div class="col-md-8">
                            <select id="Month" multiple="multiple" style="min-width:280px;" class="form-control">
                                <option value="jan">January</option>
                                <option value="feb">February</option>
                                <option value="mar">March</option>
                                <option value="apr">April</option>
                                <option value="may">May</option>
                                <option value="jun">June</option>
                                <option value="jul">July</option>
                                <option value="aug">August</option>
                                <option value="sep">September</option>
                                <option value="oct">October</option>
                                <option value="nov">November</option>
                                <option value="dec">December</option>
                            </select>
                            @Html.ValidationMessageFor(model => model.Months, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">

                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="col-md-offset-10 col-md-2">
                    <div class="form-group">
                        <button type="button" class="btn btn-primary" id="btnok">Load</button>
                        <button type="button" class="btn btn-primary" id="btnClose" name="Close">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script src="~/Scripts/FClient.js"></script>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>

    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.15/css/bootstrap-multiselect.css" rel="stylesheet" type="text/css" />
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.15/js/bootstrap-multiselect.js"></script>

    <link href="~/Content/toastr.min.css" rel="stylesheet" />
    <script src="~/Scripts/toastr.js"></script>

    <script>
        var compId=@ViewBag.CompId;
        let selectedAccounts = []
        let selectedSalesMans = []
        let selectedMonths = []
        var SessionId;
        var CCode;
        toastr.options = {
            "closeButton": true,
            "debug": false,
            "newestOnTop": true,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "500",
            "hideDuration": "500",
            "timeOut": "2500",
            "extendedTimeOut": "500",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };

        var multiselectConfig = {
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterBehavior: 'text',
            selectAllJustVisible: false,
            selectAllText: 'Select All',
            buttonWidth: '280px',
            dropRight: false,
            maxHeight: 250,
            includeResetOption: false,
            nonSelectedText: 'Choose an Option'
        };

        $(window).on("load", function () {
            debugger;
            getSetPropertyForMastersField();
            $('#Accounts').multiselect(multiselectConfig);
            $('#SalesMan').multiselect(multiselectConfig);
            $('#Month').multiselect(multiselectConfig);
            $('#Currency').val(7)
            var date = new Date($.now());
            var dateString = (date.getFullYear() + '-'
                + ('0' + (date.getMonth() + 1)).slice(-2)
                + '-' + ('0' + (date.getDate())).slice(-2));
            $('#ReportDate').val(dateString)
        });

        //----------------------------- report method calling ------------------------------------

        $("#btnok").click(function () {
            $("#progress").show();
            debugger
            var CompanyId=compId;
            selectedAccounts = []
            selectedSalesMans = []
            selectedMonths = []

            var $el=$("#Accounts");
            $el.find('option:selected').each(function(){
                selectedAccounts.push($(this).val());
            });

            var $el1=$("#SalesMan");
            $el1.find('option:selected').each(function(){
                selectedSalesMans.push($(this).text());
            });

            var $el2=$("#Month");
            $el2.find('option:selected').each(function(){
                selectedMonths.push($(this).val());
            });

            var ReportDate = $("#ReportDate").val();
            var  Currency = $("#Currency").val();
            var SelectedValue=$('.SelectionType').filter(':checked').val();

            var showPrint=true;
            var path ='@System.Web.Configuration.WebConfigurationManager.AppSettings["IpAddress"]';

            if(selectedAccounts==""){
                toastr.warning("Please Select Atleast One Account");
                $("#progress").hide();
            }
            else if(selectedSalesMans==""){
                toastr.warning("Please Select Atleast One SalesMan");
                $("#progress").hide();
            }
            else  if(ReportDate==""){
                toastr.warning("Please Provide Provide Date");
                $("#progress").hide();
            }
            else  if(Currency=="0"){
                toastr.warning("Please Select Currency");
                $("#progress").hide();
            }
            else{
                /*  window.location.href = path + "/Ageing/AgeingReport?CompanyId="+CompanyId+"&Accounts="+selectedAccounts+"&SalesMans="+selectedSalesMans+"&Months="+selectedMonths+"&ReportDate="+ReportDate+"&Currency="+Currency+"&SelectValue="+SelectedValue+"&showPrint="+showPrint+"";*/
                window.location.href = path + "/BudgetActualReport/Ageing/AgeingReport?CompanyId=" + CompanyId + "&Accounts=" + selectedAccounts + "&SalesMans=" + selectedSalesMans + "&Months=" + selectedMonths + "&ReportDate=" + ReportDate + "&Currency=" + Currency + "&SelectValue=" + SelectedValue + "&showPrint=" + showPrint + "";
            }
        });
        function fnResult() {

        }

        $('.SelectionType').change(function () {
            debugger
            var value = $(this).filter(':checked').val();
            $.ajax({
                url: '/BudgetActualReport/Ageing/GetData',
                cache: false,
                type: "POST",
                datatype: 'JSON',
                async: true,
                data: { CompanyId: compId,SelectValue:value },
                success: function (response) {
                    debugger
                    $('#Accounts').multiselect('destroy');
                    $('#Accounts').empty();
                    $.each(response.Customers, function (key, store) {
                        $('#Accounts')
                            .append($("<option></option>")
                                .attr("value", store.Value)
                                .text(store.Text));
                    });
                    $('#Accounts').multiselect(multiselectConfig);
                },
                error:function(err){
                    console.log(err)
                }
            })
        });

        $('#btnClose').click(function () {
            debugger;
            Focus8WAPI.gotoHomePage();
        });

        //--------------------------------------------- Focus8W js file -------------------------------

        function getSetPropertyForMastersField() {
            // Focus8WAPI.getGlobalValue("fnGetValueCallBack1", "COMPANYID", 1);
            Focus8WAPI.getGlobalValue("fnGetValueCallBack1", "", 1);

        }

        function fnGetValueCallBack1(objWrapperResult) {
       
            var responseData = objWrapperResult.data;
            if (objWrapperResult.requestType == 1) {
                if (objWrapperResult.iRequestId == 1) {
                    CCode = responseData.CompanyId;//this is the company id
                }
            }
        }
    </script>
}

